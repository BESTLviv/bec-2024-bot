import { IBotContext } from "../context/context.interface";
import { Markup, Scenes } from "telegraf";
import { menuKeyboard } from "../markups/after-registration.class";
import { menuOption } from "../markups/after-registration.class";
import vacancies from '../data/vacancies.json';
import { ConfigService } from "../config/config.service";
import { GetCurrentStage } from "../utils/get-current-stage";
import { UpdateStage } from "../utils/update-stage";
import path from "path";
import { TimeCheck } from "../utils/timeCheck";
import { Bot } from "../app";


const afterRegistrationMenuWizard = new Scenes.WizardScene<IBotContext>(
    'after-registration-menu-wizard',
    async (ctx) => {
        try{
            UpdateStage(ctx, 'after-registration-menu-wizard');
            if('after-registration-menu-wizard' == await GetCurrentStage()) {
                await ctx.reply("–í—ñ—Ç–∞—î–º–æ –Ω–∞ BEST Engineering Competition!", menuKeyboard);
            }
        }
        catch (error) {
            return;
        }
        
    },

);

const userLastMessageTime: { [userId: number]: number } = {};

afterRegistrationMenuWizard.hears(menuOption[0], async (ctx) => {
    // const userId = ctx.from.id;
    // const now = Date.now();

    // if (!userLastMessageTime[userId] || (now - userLastMessageTime[userId] > 2000)) {
    //     userLastMessageTime[userId] = now;
    // } else {
    //     ctx.reply('–ó–∞–±–∞–≥–∞—Ç–æ —Å–ø—Ä–æ–± –≤–∏–∫–æ–Ω–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É');
    //     return;
    // }

    // await ctx.reply("–î–æ—Å—Ç—É–ø–Ω—ñ –≤–∞–∫–∞–Ω—Å—ñ—ó:\n\n");
    // for (const vacancy of vacancies.vacancies) {
    //     await ctx.reply(`${vacancy.text}\n`);
    // }
    try{
        await TimeCheck(ctx)
        await ctx.reply('–ü—Ä–∏—î–¥–Ω—É–π—Å—è –¥–æ –Ω–∞—à–æ–≥–æ —á–∞—Ç—É',  Markup.inlineKeyboard([
            Markup.button.url('–¢–∏–∫', 'https://t.me/BEC_2024_find_team')
        ]));  
    }
    catch(error) {
        return;
    }
});
afterRegistrationMenuWizard.hears(menuOption[1], async (ctx) => {
     return ctx.scene.enter('more-info-menu-wizard');   
})
afterRegistrationMenuWizard.hears(menuOption[2], async (ctx) => {
    return ctx.scene.enter('my-team-menu-wizard');
})

const adminSecret = new ConfigService().get("ADMIN_WORD");
afterRegistrationMenuWizard.hears(adminSecret, async (ctx) => {
    ctx.replyWithPhoto(
        { source:  path.resolve(__dirname, '../../public/logo.jpg') },  // –®–ª—è—Ö –¥–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª—É
        {
          caption: '–ù–µ –≤–∞–∂–ª–∏–≤–æ, —â–æ —Å—Ç–∞–Ω–µ—Ç—å—Å—è ‚Äî —ñ–Ω–∂–µ–Ω–µ—Ä–∏ –∑–∞–≤–∂–¥–∏ –≤—ñ–¥–±—É–¥–æ–≤—É—é—Ç—å —Å–≤—ñ—Ç! üë∑‚Äç‚ôÄÔ∏èüåç\n–ù–∞–≥–∞–¥—É—î–º–æ, —â–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –Ω–∞ BEST Engineering Competition –≤—ñ–¥–∫—Ä–∏—Ç–∞ –¥–æ 15 –∂–æ–≤—Ç–Ω—è! –ü–æ–¥—ñ—è –≤—ñ–¥–±—É–¥–µ—Ç—å—Å—è 25-29 –∂–æ–≤—Ç–Ω—è —É –õ—å–≤–æ–≤—ñ. \n–¶—å–æ–≥–æ—Ä—ñ—á–Ω–∞ —Ç–µ–º–∞—Ç–∏–∫–∞ ‚Äî military, —Ç–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—è –∑–æ—Å–µ—Ä–µ–¥–∂–µ–Ω—ñ –Ω–∞ –≤–∏—Ä—ñ—à–µ–Ω–Ω—ñ –ø—Ä–æ–±–ª–µ–º –≤—ñ–π–Ω–∏ —Ç–∞ –ø–æ–≤–æ—î–Ω–Ω–æ—ó –≤—ñ–¥–±—É–¥–æ–≤–∏. \nüí°–û–±–∏—Ä–∞–π –æ–¥–Ω—É –∑ –¥–≤–æ—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π:\n- Case Study: —Ç–µ–æ—Ä–µ—Ç–∏—á–Ω—ñ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è –∑–∞–¥–∞—á –≤ —ñ–Ω–∂–µ–Ω–µ—Ä—ñ—ó, –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤—ñ —Ç–∞ –≤—ñ–π—Å—å–∫–æ–≤—ñ–π —Å—Ñ–µ—Ä—ñ.  \n–ü—Ä–∏–∫–ª–∞–¥: –†–µ—Å—Ç–∞–≤—Ä–∞—Ü—ñ—è –•–µ—Ä—Å–æ–Ω–µ—Å–∞ –¢–∞–≤—Ä—ñ–π—Å—å–∫–æ–≥–æ –∑ –∑–∞—Ö–∏—Å—Ç–æ–º –≤—ñ–¥ —Å–ø–æ–≤–∑–∞–Ω–Ω—è “ë—Ä—É–Ω—Ç—É —Ç–∞ –∑–∞—Ç–æ–ø–ª–µ–Ω–Ω—è. \n- Team Design: —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–æ–±–æ—á–æ–≥–æ –ø—Ä–æ—Ç–æ—Ç–∏–ø—É –∞–±–æ —Å–∏—Å—Ç–µ–º–∏ —É —Å—Ñ–µ—Ä–∞—Ö IoT, –µ–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∏, –º–µ—Ö–∞–Ω—ñ–∫–∏.  \n–ü—Ä–∏–∫–ª–∞–¥: –ê–≤—Ç–æ–Ω–æ–º–Ω–∏–π –ø—Ä–∏—Å—Ç—Ä—ñ–π –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –∂–∏—Ç—Ç—î–≤–∏—Ö –ø–æ–∫–∞–∑–Ω–∏–∫—ñ–≤ —Å–æ–ª–¥–∞—Ç–∞. \n–ù–∞ –∑–∞—Ö–æ–¥—ñ –±—É–¥—É—Ç—å –ø—Ä–µ–¥—Å—Ç–∞–≤–Ω–∏–∫–∏ –∫–æ–º–ø–∞–Ω—ñ–π ‚Äî —á—É–¥–æ–≤–∞ –Ω–∞–≥–æ–¥–∞ –¥–ª—è –Ω–µ—Ç–≤–æ—Ä–∫—ñ–Ω–≥—É —Ç–∞ –ø—Ä–∞—Ü–µ–≤–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è! üíºü§ù\n–ù–µ –∑–≤–æ–ª—ñ–∫–∞–π ‚Äî —Ä–µ—î—Å—Ç—Ä—É–π—Å—è —ñ –ø–æ–∫–∞–∂–∏, —â–æ –º–∞–π–±—É—Ç–Ω—î –∑–∞ —ñ–Ω–∂–µ–Ω–µ—Ä–∞–º–∏! üî•\n(–Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–∞—é—Ç—å —è–∫—ñ—Å—å –∑–∞–≥–∞–ª—å–Ω—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è, —Ç–æ –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å –¥–æ @ruslan_yavir)',
          reply_markup: {
            inline_keyboard: [
              [
                { text: '–î—ñ–∑–Ω–∞—Ç–∏—Å—è –±—ñ–ª—å—à–µ üîç', url: 'https://bec-2024.best-lviv.org.ua/ua' },
                { text: '–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è üìù', url: 'https://t.me/bec24_bot' }
              ]
            ]
          }
        }
      );
    return ctx.scene.enter('admin-panel-wizard');
});



export default afterRegistrationMenuWizard;
